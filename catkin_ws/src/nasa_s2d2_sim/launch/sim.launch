<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find nasa_s2d2_sim)/worlds/park.world"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="true"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="verbose" value="true"/>
  </include>

  <!-- Spawn the ground vehicles -->
  <include file="$(find visual_mtt_sim)/launch/vehicles.launch">
    <arg name="vehicle1" default="drc_vehicle1" />
    <arg name="vehicle2" default="drc_vehicle2" />
    <arg name="vehicle1_frequency" default="0.1" />
    <arg name="vehicle1_max_velocity" default="4.5" />
    <arg name="vehicle1_proportion" default="0.5" />
    <arg name="vehicle2_frequency" default="0.2" />
    <arg name="vehicle2_max_velocity" default="4.5" />
    <arg name="vehicle2_proportion" default="0.7" />
  </include>

  <!-- MAV parameters -->
  <arg name="mav_name" default="hummingbird"/>
  <arg name="x"   default="0"/>
  <arg name="y"   default="-75"/>
  <arg name="z"   default="30"/>
  <arg name="yaw" default="1.59"/>
  <arg name="color" default="White"/>
  <arg name="starting_node_id" default="0"/>

  <group ns="$(arg mav_name)">
    <!-- Change some parameters -->
    <rosparam subst_value="True">
     attitude_controller:     { robot_namespace: $(arg mav_name) }

     xbox:                    { dev: /dev/input/js0,
                                deadzone: 0.12,
                                autorepeat_rate: 50 }
    </rosparam>

    <!-- Spawn in Gazebo -->
    <rosparam command="load" file="$(find fcu_sim)/param/$(arg mav_name)_physical_params.yaml"/>
    <include file="$(find fcu_sim)/launch/spawn_mav.launch">
      <arg name="mav_name"            value="$(arg mav_name)" />
      <arg name="model"               value="$(find nasa_s2d2_sim)/urdf/$(arg mav_name)_base.xacro" />
      <arg name="enable_ground_truth" value="true" />
      <arg name="x"                   value="$(arg x)"/>
      <arg name="y"                   value="$(arg y)"/>
      <arg name="z"                   value="$(arg z)"/>
      <arg name="yaw"                 value="$(arg yaw)"/>
      <arg name="color"               value="$(arg color)"/>
    </include>

    <!-- Keyboard Teleop -->
    <node name="keyboard" pkg="key_commander" type="key_commander_node" output="screen">
      <param name="altitude_increment" value="0.5"/>
      <param name="max_yaw_rate" value="0.1"/>
    </node>

    <!-- Velocity Controller -->
    <rosparam command="load" file="$(find visual_mtt_sim)/param/$(arg mav_name).yaml"/>
    <node name="pid_controller"      pkg="rotor_controller"    type="rotor_controller_pid"/>

    <!-- Truth -->
    <node name="truth" pkg="rotor_estimator" type="truth" output="screen">
      <param name="use_vo_keyframes" value="false"/>
      <param name="starting_node_id" value="$(arg starting_node_id)"/>
      <remap from="pose" to="ground_truth/pose_with_covariance"/>
    </node>

    <!-- Attitude Control -->
    <rosparam command="load" file="$(find attitude_controller)/param/$(arg mav_name)_gains.yaml"/>
    <node name="attitude_controller" pkg="attitude_controller" type="attitude_controller_node">
      <remap from="odometry" to="$(arg mav_name)/ground_truth/odometry"/>
      <remap from="command/motor_speed" to="command/motor_speed"/>
    </node>

    <!-- RQT -->
    <!-- <node name="rqt_graph" pkg="rqt_graph" type="rqt_graph"/> -->
    <!-- <node name="tuning" pkg="rqt_reconfigure" type="rqt_reconfigure"/> -->

    <!-- Image View -->
    <!-- <node name="camera_image" pkg="rqt_image_view" type="rqt_image_view"/> -->
  </group>

    <!-- Sync image and gyro data -->
    <node pkg="visual_mtt" type="imageGyroSync" name="sync_node" output="screen" args="_image_transport:=raw">
        <param name="use_imu_in_sync" value="false"/>
        <param name="Nth_frame" value="2"/>
        <param name="save_Nth_frame" value="0"/>
        <remap from="image_raw" to="$(arg mav_name)/camera/rgb"/>
    </node>

    <!-- Track objects on synced image stream -->
    <node pkg="visual_mtt" type="rosWrapper" name="rosWrapper" output="screen">
        <param name="show_tracks_video" value="true"/>
        <param name="show_diff_img_video" value="false"/>
        <param name="show_moving_obj_video" value="false"/>
    </node>

</launch>