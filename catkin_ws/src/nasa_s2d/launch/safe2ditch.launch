<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <!-- Arguments to be passed in -->
    <arg name="vmtt_tuning" default="false" />
    <arg name="show3d" default="false" />

    <!-- <node name="gcs_bridge" pkg="mavros" type="gcs_bridge"> -->
        <!-- You can connect locally using localhost on port 14550 -->
        <!-- <param name="gcs_url" value="udp://@localhost" /> -->
        <!-- <param name="gcs_url" value="udp://@127.0.0.1:14555" /> -->
    <!-- </node> -->

    <!-- Start mavros and connect to the Pixhawk running APM:Copter -->
    <include file="$(find nasa_s2d)/launch/mavros.launch">
        <!-- Connect via a MAVProxy GCS output -->
        <arg name="fcu_url"  value="udp://127.0.0.1:14550@" />
    </include>

    <!-- Run a series of mavros mavsys commands to increase sensor pub rate -->
    <!-- <node name="gofast" pkg="nasa_s2d" type="gofast.sh" output="screen" /> -->

    <!-- launch visual_mtt -->
    <include file="$(find visual_mtt)/launch/visual_mtt.launch">
        <arg name="params" value="$(find nasa_s2d)/param/sully.yaml" />
        <arg name="tuning" value="$(arg vmtt_tuning)" />
        <arg name="imgtopic" value="/camera/image_raw" />
    </include>

    <!-- Adaptive Parameter Tuning -->
    <node pkg="nasa_s2d" type="adaptive_params.py" name="adaptive_params">
        <remap from="odom" to="/mavros/global_position/local" />
    </node>

    <!-- launch geolocation -->
    <include file="$(find nasa_s2d)/launch/geolocate.launch">
        <arg name="show3d" value="$(arg show3d)" />
    </include>

    <!-- Visual Obstacle Detection -->
    <node name="obstacle_detection" pkg="nasa_s2d" type="obstacle_detection.py" output="screen">
        <remap from="uav_gps_fix" to="/mavros/global_position/global" />
    </node>

    <!-- Ditch Site Selection: Pass in the configuration file directory (mavproxy aircraft dir) -->
    <node name="dss_node" pkg="nasa_s2d" type="dss_node.py" args="$(eval '--dir ' + env('S2DDSS') + '/' + env('S2DAIRCRAFT'))" output="screen" />

    <!-- DSS Communications -->
    <node name="dss_comms" pkg="nasa_s2d" type="dss_comms.py" output="screen" />
</launch>
