# Get path to this file, no matter where it is sourced from
MYPATH=`dirname ${BASH_SOURCE[0]}`

alias ll='ls -lh --color=auto'
alias l='ls -alh --color=auto'
alias ..='cd ..'
alias ...='cd ../..'

# Parallel Make
export MAKEFLAGS="-j $(grep -c ^processor /proc/cpuinfo)"

# ROS Kinetic
export ROS_MASTER_URI=http://localhost:11311
export ROS_IP=192.168.0.138
source /opt/ros/kinetic/setup.bash
source $MYPATH/../catkin_ws/devel/setup.bash

# ROS Tools
#alias catkin_make_tx2='catkin_make -DVISUAL_MTT_CUDA=ON -DOpenCV_DIR=/usr/local/share/OpenCV -DCATKIN_BLACKLIST_PACKAGES="nasa_s2d_sim;rviz_satellite"'
alias catkin_make_tx2='catkin_make -DVISUAL_MTT_CUDA=ON -DOpenCV_DIR=/usr/local/share/OpenCV -DCATKIN_BLACKLIST_PACKAGES="nasa_s2d_sim;ardupilot_sim;gzsatellite;moving_targets"'
alias bagrecord='rosbag record -a -x "/camera/(.*)|/tracks_video(.*)" /camera/image_raw/compressed /camera/camera_info /tracks_video/compressed'
alias rosgo='roslaunch nasa_s2d hardware.launch'
alias roskill='killall -2 rosbag && killall roslaunch'

function rosreview {
	BAG=$1
	set -x
	roslaunch nasa_s2d review.launch show_dashboard:=false tuning:=false hide_bag:=true bagroot:=/media/nvidia/sullydata/nasa bagname:=${BAG}
	{ set +x; } 2> /dev/null
}

# Use rosbag filter to create a new bag
function bagcut {
        BAG=${1:0:-4}
        OFFSET=$2
        START=`rosbag info ${BAG}.bag | grep start | head -1 | tr -s ' ' | cut -d " " -f 6 | bc`
        END=`rosbag info ${BAG}.bag   | grep end   | head -1 | tr -s ' ' | cut -d " " -f 6 | bc`
        NEWSTART=`echo "$START + $OFFSET" | bc`

        # Is there an ending limit?
        if [ ! -z "$3" ]
        then
                if [ `echo "$3 < 0" | bc` -ne "0" ]
                then
                        END=`echo "$END - $3" | bc`
                else
                        END=`echo "$START + $3" | bc`
                fi
        fi

        rosbag info ${BAG}.bag | grep start | head -1
        rosbag info ${BAG}.bag | grep end   | head -1

        set -x
        rosbag filter ${BAG}.bag ${BAG}.split.bag "t.secs >= $NEWSTART and t.secs <= $END"
        { set +x; } 2>/dev/null
}


# Setup a test environment
function testname {
	NAME=$1
	echo $NAME > $MYPATH/../startup/.testname
}
